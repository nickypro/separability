---
# Setup pytorch
- name: Install torch using Poetry managed pip
  command:
    cmd: poetry run pip install torch
    chdir: /root/separability
  environment:
    PATH: "/root/.local/bin:{{ ansible_env.PATH }}"

# Setup ENV variables and .bashrc file
- name: Set git global user name
  command:
    cmd: git config --global user.name "{{ GIT_USER_NAME }}"

- name: Set git global user email
  command:
    cmd: git config --global user.email "{{ GIT_USER_EMAIL }}"

- name: Append credentials to ~/.netrc
  blockinfile:
    path: "/root/.netrc"
    block: |
      machine api.wandb.ai
        login user
        password {{ WANDB_API_KEY }}

- name: Add LD_LIBRARY_PATH to ~/.bashrc
  lineinfile:
    path: "/root/.bashrc"
    line: 'export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda/lib64'

- name: Add alias to ~/.bashrc
  lineinfile:
    path: "/root/.bashrc"
    line: 'alias py="poetry run python"'

# Setup DASK Worker resources
- name: Detect VRAM size
  shell: nvidia-smi --query-gpu=memory.total --format=csv,noheader,nounits | awk '{print $1/1000}'
  register: vram_size

# Make dask worker script
- name: Create supervisord service for Dask worker
  copy:
    dest: "/etc/supervisor/conf.d/dask-worker.conf"
    content: |
      [program:dask-worker]
      command=/root/separability/.venv/bin/dask-worker {{ hostvars[groups['master'][0]].ansible_host }}:8786 --resources "VRAM={{ vram_size.stdout }}"
      environment=PYTHONUNBUFFERED=1
      user=root
      redirect_stderr=true
      stdout_logfile=/var/log/dask-worker.log
      autostart=true
      autorestart=true

- name: Ensure supervisord service is running
  service:
    name: supervisor
    state: started
  ignore_errors: yes

- name: Update Supervisor with new configurations
  command:
    cmd: "{{ item }}"
  with_items:
    - supervisorctl reread
    - supervisorctl update

- name: Attempt to start Dask Worker
  command: supervisorctl start dask-worker
  register: dask_worker_start
  ignore_errors: yes

- name: Restart Dask Worker if already running
  command: supervisorctl restart dask-worker
  when: "'already started' in dask_worker_start.stdout"
  ignore_errors: yes
